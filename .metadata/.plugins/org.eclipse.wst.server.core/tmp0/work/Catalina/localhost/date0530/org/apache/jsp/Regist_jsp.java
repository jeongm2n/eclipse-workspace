/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.75
 * Generated at: 2023-06-02 08:47:40 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Regist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>회원가입</title>\n");
      out.write("<style>\n");
      out.write("	.front{\n");
      out.write("		background-color : #B4CFEC;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	.rear{\n");
      out.write("		background-color : #F0F8FF;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	.textbox{\n");
      out.write("		width:200px;\n");
      out.write("	}\n");
      out.write("</style>\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("\n");
      out.write("	/* 아이디 확인 */\n");
      out.write("	 function checkId(id){\n");
      out.write("		var cnt = 0;\n");
      out.write("		\n");
      out.write("		var regex = /^[A-Za-z0-9+]*$/;\n");
      out.write("		\n");
      out.write("		if(id.length>8 || id.length<5){\n");
      out.write("			document.Registform.usr.focus();\n");
      out.write("			alert('아이디는 5자리 ~ 8자리여야 합니다.');\n");
      out.write("			return false;\n");
      out.write("		}\n");
      out.write("		else{\n");
      out.write("			if(regex.test(id)){\n");
      out.write("				return true;\n");
      out.write("			}\n");
      out.write("			else{\n");
      out.write("				document.Registform.usr.focus();\n");
      out.write("				alert('아이디를 다시 확인하세요');\n");
      out.write("				return false;\n");
      out.write("			}\n");
      out.write("		}\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	 /* 1차 2차 비밀번호 같은지 다른지 확인 */\n");
      out.write("	function checkPwd(pwd1,pwd2){\n");
      out.write("\n");
      out.write("		if(pwd1==pwd2){\n");
      out.write("			return true;\n");
      out.write("		}\n");
      out.write("		else{\n");
      out.write("			return false;\n");
      out.write("		}\n");
      out.write("	}\n");
      out.write("	 /* 이메일 select 박스에서 선택했을 때 @ 뒤의 text박스에 값 넣기 */\n");
      out.write("	function handleonChange(e){\n");
      out.write("		var v=e.value;\n");
      out.write("		document.Registform.rear.value=v;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	function validateForm(){\n");
      out.write("    	//console.log('확인');\n");
      out.write("    	\n");
      out.write("		var id = document.Registform.usr.value;\n");
      out.write("		var pwd1 = document.Registform.pword.value;\n");
      out.write("		var pwd2 = document.Registform.pss.value;\n");
      out.write("		var usrname = document.Registform.usrname.value;\n");
      out.write("		var gender = document.Registform.gender.value;\n");
      out.write("		var year = document.Registform.year.value;\n");
      out.write("		var month = document.Registform.month.value;\n");
      out.write("		var day = document.Registform.day.value;\n");
      out.write("		var kind = document.Registform.kind.value;\n");
      out.write("		var first = document.Registform.first.value;\n");
      out.write("		var second = document.Registform.second.value;\n");
      out.write("		var third = document.Registform.third.value;\n");
      out.write("		var front = document.Registform.front.value;\n");
      out.write("		var rear = document.Registform.rear.value;\n");
      out.write("		var addr_post = document.Registform.addr_post.value;\n");
      out.write("		var addr_lot = document.Registform.addr_lot.value;\n");
      out.write("		var addr_road = document.Registform.addr_road.value;\n");
      out.write("		var addr_rest = document.Registform.addr_rest.value;\n");
      out.write("		\n");
      out.write("		if(checkId(id)){\n");
      out.write("			if(!checkPwd(pwd1,pwd2)){\n");
      out.write("				alert('비밀번호를 다시 확인해주세요');\n");
      out.write("				return false;\n");
      out.write("			}\n");
      out.write("		}else{\n");
      out.write("			return false;\n");
      out.write("		}\n");
      out.write("		\n");
      out.write("		/* SMS 수신 동의 체크 안할 시 no를 전달하기 위함 */\n");
      out.write("		if(document.getElementById(\"input_yes1\").checked){\n");
      out.write("			document.getElementById(\"input_no1\").disabled = true;\n");
      out.write("		}\n");
      out.write("		\n");
      out.write("		/* 이메일 수신 동의 체크 안할 시 no를 전달하기 위함 */\n");
      out.write("		if(document.getElementById(\"input_yes2\").checked){\n");
      out.write("			document.getElementById(\"input_no2\").disabled = true;\n");
      out.write("		}\n");
      out.write("		\n");
      out.write("		/* 모든 항목 중에 입력안한 곳이 있을 시 alert 출력 */\n");
      out.write("		if(!id || !pwd1 || !pwd2 || !usrname || !gender || !year || !month || !day || !kind || !first ||\n");
      out.write("				!second || !third || !front || !rear || !addr_post || !addr_lot || !addr_road || !addr_rest){\n");
      out.write("			alert('모든 항목을 입력해주세요!');\n");
      out.write("			return false;\n");
      out.write("		}\n");
      out.write("		else{\n");
      out.write("			return true;\n");
      out.write("		}\n");
      out.write("		\n");
      out.write("		\n");
      out.write("    }\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("<h1 style=\"color:#659EC7\">필수입력사항</h1>\n");
      out.write("<form name=\"Registform\" action=Regist_ok.jsp method=get onSubmit=\"return validateForm();\">\n");
      out.write("<table border=1>\n");
      out.write("	<tr><td class=\"front\">아이디</td>\n");
      out.write("    <td class=\"rear\"><input type=\"text\" class=\"textbox\" name=\"usr\" placeholder=\"5~8자리의 영문/숫자만 입력하세요.\"></td></tr>\n");
      out.write("    <tr><td class=\"front\">비밀번호</td>\n");
      out.write("    <td class=\"rear\"><input type=\"text\" class=\"textbox\" name=\"pword\" placeholder=\"password\"></td></tr>\n");
      out.write("   	<tr><td class=\"front\">비밀번호 확인</td>\n");
      out.write("   	<td class=\"rear\"><input type=\"text\" class=\"textbox\" name=\"pss\"></td></tr>\n");
      out.write("   	<tr><td class=\"front\">이름</td>\n");
      out.write("   	<td class=\"rear\"><input type=\"text\" name=\"usrname\"></td></tr>\n");
      out.write("   	<tr><td class=\"front\">성별</td>\n");
      out.write("   	<td class=\"rear\"><input type=\"radio\" name=\"gender\" value=\"male\"/>남\n");
      out.write("   	<input type=\"radio\" name=\"gender\" value=\"female\"/>여</td></tr>\n");
      out.write("   	<tr><td class=\"front\">생년월일</td>\n");
      out.write("   	<td class=\"rear\"><select name=\"year\">\n");
      out.write("   	<script>\n");
      out.write("   		for(var i=2023;i>1920;i--){\n");
      out.write("   			document.write(\"<option>\"+i+\"</option>\");\n");
      out.write("   		}\n");
      out.write("   	</script>\n");
      out.write("   	</select>년\n");
      out.write("   	\n");
      out.write("   	<select name=\"month\">\n");
      out.write("   	<script>\n");
      out.write("   		for(var i=1;i<=12;i++){\n");
      out.write("   			document.write(\"<option>\"+i+\"</option>\");\n");
      out.write("   		}\n");
      out.write("   	</script>\n");
      out.write("   	</select>월\n");
      out.write("   	\n");
      out.write("   	<select name=\"day\">\n");
      out.write("   	<script>\n");
      out.write("   		for(var i=1;i<=31;i++){\n");
      out.write("   			document.write(\"<option>\"+i+\"</option>\");\n");
      out.write("   		}\n");
      out.write("   	</script>\n");
      out.write("   	</select>일\n");
      out.write("   	<input type=\"radio\" name=\"kind\" value=\"양력\"/>양력\n");
      out.write("   	<input type=\"radio\" name=\"kind\" value=\"음력\"/>음력</td></tr>\n");
      out.write("   	<tr><td class=\"front\">휴대폰번호</td>\n");
      out.write("   	<td class=\"rear\"><select name=\"first\">\n");
      out.write("   		<option selected=\"selected\" value=\"null\">선택하세요</option>\n");
      out.write("   		<option>010</option>\n");
      out.write("   		<option>016</option>\n");
      out.write("   		<option>011</option>\n");
      out.write("   	</select>\n");
      out.write("   	<input type=\"text\" name=\"second\"/>\n");
      out.write("   	<input type=\"text\" name=\"third\"/><br>\n");
      out.write("   	<input type=\"checkbox\" name=\"sms_al\" value=\"yes\" id=\"input_yes1\"/>SMS 광고 수신을 동의합니다.\n");
      out.write("   	<input type=\"hidden\" name=\"sms_al\" value=\"no\" id=\"input_no1\"/></td></tr>\n");
      out.write("   	<tr><td class=\"front\">이메일</td>\n");
      out.write("   	<td class=\"rear\"><input type=\"text\" class=\"textbox\" name=\"front\"/>\n");
      out.write("   	@<input type=\"text\" class=\"textbox\" name=\"rear\"/>\n");
      out.write("   	<select name=\"rear2\" onchange=\"handleonChange(this);\">\n");
      out.write("   	<option selected=\"selected\" value=\"null\">직접입력</option>\n");
      out.write("   	<option value=\"naver.com\">naver.com</option>\n");
      out.write("   	<option value=\"nate.com\">nate.com</option>\n");
      out.write("   	<option value=\"gmail.com\">gmail.com</option>\n");
      out.write("   	</select><br>\n");
      out.write("   	<input type=\"checkbox\" name=\"email_al\" value=\"yes\" id=\"input_yes2\"/>E-mail 광고 수신을 동의합니다.\n");
      out.write("   	<input type=\"hidden\" name=\"email_al\" value=\"no\" id=\"input_no2\"/></td></tr>\n");
      out.write("   	<tr><td class=\"front\">주소</td>\n");
      out.write("   	<td class=\"rear\">\n");
      out.write("   	우편번호<br><input type=\"text\" class=\"textbox\" name=\"addr_post\"/><br>\n");
      out.write("   	지번 주소<br><input type=\"text\" class=\"textbox\" name=\"addr_lot\"/><br>\n");
      out.write("   	도로명 주소<br><input type=\"text\" class=\"textbox\" name=\"addr_road\"/><br>\n");
      out.write("   	나머지 주소<br><input type=\"text\" class=\"textbox\" name=\"addr_rest\"/></td></tr>\n");
      out.write("</table>\n");
      out.write("    \n");
      out.write("   	<input type=\"submit\" value=\"가입하기!\"/>\n");
      out.write("</form>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
