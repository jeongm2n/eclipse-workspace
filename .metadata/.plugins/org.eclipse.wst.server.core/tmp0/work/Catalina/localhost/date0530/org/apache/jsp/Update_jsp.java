/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.75
 * Generated at: 2023-06-12 01:49:09 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.DriverManager;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

public final class Update_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/./dbconn.jsp", Long.valueOf(1685605591000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.sql.SQLException");
    _jspx_imports_classes.add("java.sql.Connection");
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("java.sql.PreparedStatement");
    _jspx_imports_classes.add("java.sql.DriverManager");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("    \n");
      out.write("\n");
      out.write("\n");
      out.write("    \n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("\n");

	Connection conn = null;
	
	String url = "jdbc:mysql://localhost:3306/regist";
	String id = "root";                  
	String pwd = "campus";
	Class.forName("com.mysql.jdbc.Driver");
	conn = DriverManager.getConnection(url, id, pwd);

      out.write('\n');
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>회원정보 수정</title>\n");
      out.write("<style>\n");
      out.write("	.front{\n");
      out.write("		background-color : #B4CFEC;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	.rear{\n");
      out.write("		background-color : #F0F8FF;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	.textbox{\n");
      out.write("		width:200px;\n");
      out.write("	}\n");
      out.write("</style>\n");
      out.write("<script>\n");
      out.write("	\n");
      out.write("	 /* 1차 2차 비밀번호 같은지 다른지 확인 */\n");
      out.write("	function checkPwd(pwd,pwd2){\n");
      out.write("\n");
      out.write("		if(pwd==pwd2){\n");
      out.write("			return true;\n");
      out.write("		}\n");
      out.write("		else{\n");
      out.write("			return false;\n");
      out.write("		}\n");
      out.write("	}\n");
      out.write("	 \n");
      out.write("	function validateUpdate(){\n");
      out.write("		var pwd = document.Updateform.pwd.value;\n");
      out.write("		var pwd2 = document.Updateform.pwd2.value;\n");
      out.write("		var usrname = document.Updateform.usrname.value;\n");
      out.write("		var gender = document.Updateform.gender.value;\n");
      out.write("		var year = document.Updateform.year.value;\n");
      out.write("		var month = document.Updateform.month.value;\n");
      out.write("		var day = document.Updateform.day.value;\n");
      out.write("		var kind = document.Updateform.kind.value;\n");
      out.write("		var first = document.Updateform.first.value;\n");
      out.write("		var second = document.Updateform.second.value;\n");
      out.write("		var third = document.Updateform.third.value;\n");
      out.write("		var addr_post = document.Updateform.addr_post.value;\n");
      out.write("		var addr_lot = document.Updateform.addr_lot.value;\n");
      out.write("		var addr_road = document.Updateform.addr_road.value;\n");
      out.write("		var addr_rest = document.Updateform.addr_rest.value;\n");
      out.write("		\n");
      out.write("		if(!checkPwd(pwd,pwd2)){\n");
      out.write("			alert('비밀번호를 다시 확인해주세요');\n");
      out.write("			return false;\n");
      out.write("		}\n");
      out.write("		\n");
      out.write("		/* 모든 항목 중에 입력안한 곳이 있을 시 alert 출력 */\n");
      out.write("		if(!pwd || !pwd2 || !usrname || !gender || !year || !month || !day || !kind || !first ||\n");
      out.write("				!second || !third || !addr_post || !addr_lot || !addr_road || !addr_rest){\n");
      out.write("			alert('모든 항목을 입력해주세요!');\n");
      out.write("			return false;\n");
      out.write("		}\n");
      out.write("		else{\n");
      out.write("			return true;\n");
      out.write("		}\n");
      out.write("	}\n");
      out.write("</script>\n");
      out.write("</head>\n");
      out.write("<body>\n");

	String usr_id = (String)session.getAttribute("ID");

	/* 로그인한 유저의 정보를 가져오기 위한 SQL */
	String sql="SELECT * FROM usrregist WHERE member_id='"+usr_id+"'";
	
	PreparedStatement pstmt = conn.prepareStatement(sql);
	ResultSet rs = pstmt.executeQuery();
	
	String tels[]={"010","016","011"};
	
	/* 로그인한 유저의 모든 정보를 가져옴 */
	if(rs.next()){
		String member_pwd = rs.getString("member_pwd");
		String member_name = rs.getString("member_name");
		String member_gender = rs.getString("member_gender");
		int birth_y = Integer.parseInt(rs.getString("birth_y"));
		int birth_m = Integer.parseInt(rs.getString("birth_m"));
		int birth_d = Integer.parseInt(rs.getString("birth_d"));
		String birth_kind = rs.getString("birth_kind");
		String tel = rs.getString("tel");
		String sms_al = rs.getString("sms_al");
		String email = rs.getString("email");
		String email_al = rs.getString("email_al");
		String addr_post = rs.getString("addr_post");
		String addr_lot = rs.getString("addr_lot");
		String addr_road = rs.getString("addr_road");
		String addr_rest = rs.getString("addr_rest");
		String reg_date = rs.getString("reg_date");
		String num[] = tel.split("-");

      out.write("\n");
      out.write("<!-- 유저가 기존에 갖고 있던 정보들을 디폴트값으로 설정 -->\n");
      out.write("<h1 style=\"color:#659EC7\">회원정보수정</h1> \n");
      out.write("<form name=\"Updateform\" action=Update_ok.jsp method=get onSubmit=\"return validateUpdate();\">\n");
      out.write("<table border=1>\n");
      out.write("	<tr><td class=\"front\">아이디</td>\n");
      out.write("    <td class=\"rear\">");
      out.print(usr_id);
      out.write("</td></tr>\n");
      out.write("    <tr><td class=\"front\">기존 비밀번호</td>\n");
      out.write("    <td class=\"rear\">");
      out.print(member_pwd);
      out.write("</td></tr>\n");
      out.write("   	<tr><td class=\"front\">새로운 비밀번호</td>\n");
      out.write("   	<td class=\"rear\"><input type=\"text\" class=\"textbox\" name=\"pwd\"></td></tr>\n");
      out.write("   	<tr><td class=\"front\">새로운 비밀번호 확인</td>\n");
      out.write("   	<td class=\"rear\"><input type=\"text\" class=\"textbox\" name=\"pwd2\"></td></tr>\n");
      out.write("   	<tr><td class=\"front\">이름</td>\n");
      out.write("   	<td class=\"rear\"><input type=\"text\" name=\"usrname\" value=");
      out.print(member_name);
      out.write("></td></tr>\n");
      out.write("   	<tr><td class=\"front\">성별</td>\n");
      out.write("   	");
 //성별에 따라 라디오버튼 기본값을 다르게 설정 
   		String m = "male";
   		if(member_gender.equals(m)){
      out.write("\n");
      out.write("   			<td class=\"rear\"><input type=\"radio\" name=\"gender\" value=\"male\" checked=\"checked\"/>남\n");
      out.write("   			<input type=\"radio\" name=\"gender\" value=\"female\"/>여</td></tr>");

   		}
   		else{
      out.write("\n");
      out.write("   			<td class='rear'><input type='radio' name='gender' value='male'/>남\n");
      out.write("   			<input type='radio' name='gender' value='female' checked='checked'/>여</td></tr>\n");
      out.write("   		");
}
   	
      out.write("\n");
      out.write("   	<tr><td class=\"front\">생년월일</td>\n");
      out.write("   	<td class=\"rear\"><select name=\"year\">\n");
      out.write("   	<script> // 저장되어 있는 사용자의 생년월일이 기본값으로 뜨도록 설정 \n");
      out.write("   		for(var i=2023;i>1920;i--){\n");
      out.write("   			if(i==");
      out.print(birth_y);
      out.write("){\n");
      out.write("   				document.write(\"<option selected='selected'>\"+i+\"</option>\");\n");
      out.write("   			}\n");
      out.write("   			else{ document.write(\"<option>\"+i+\"</option>\");}\n");
      out.write("   		}\n");
      out.write("   	</script>\n");
      out.write("   	</select>년\n");
      out.write("   	\n");
      out.write("   	<select name=\"month\">\n");
      out.write("   	<script>\n");
      out.write("   		for(var i=1;i<=12;i++){\n");
      out.write("   			if(i==");
      out.print(birth_m);
      out.write("){\n");
      out.write("   				document.write(\"<option selected='selected'>\"+i+\"</option>\");\n");
      out.write("   			}\n");
      out.write("   			else{ document.write(\"<option>\"+i+\"</option>\");}\n");
      out.write("   		}\n");
      out.write("   	</script>\n");
      out.write("   	</select>월\n");
      out.write("   	\n");
      out.write("   	<select name=\"day\">\n");
      out.write("   	<script>\n");
      out.write("   		for(var i=1;i<=31;i++){\n");
      out.write("   			if(i==");
      out.print(birth_d);
      out.write("){\n");
      out.write("   				document.write(\"<option selected='selected'>\"+i+\"</option>\");\n");
      out.write("   			}\n");
      out.write("   			else{ document.write(\"<option>\"+i+\"</option>\");}\n");
      out.write("   		}\n");
      out.write("   	</script>\n");
      out.write("   	</select>일\n");
      out.write("   		");
 // 양력,음력에 따라 라디오버튼 기본값을 다르게 설정 
   		String k = "양력";
   		if(birth_kind.equals(k)){
      out.write("\n");
      out.write("   			<input type=\"radio\" name=\"kind\" value=\"양력\" checked=\"checked\"/>양력\n");
      out.write("   			<input type=\"radio\" name=\"kind\" value=\"음력\"/>음력</td></tr>");

   		}
   		else{
      out.write("\n");
      out.write("   			<input type=\"radio\" name=\"kind\" value=\"양력\"/>양력\n");
      out.write("   			<input type=\"radio\" name=\"kind\" value=\"음력\" checked=\"checked\"/>음력</td></tr>\n");
      out.write("   		");
}
   	
      out.write("\n");
      out.write("   	\n");
      out.write("   	<tr><td class=\"front\">휴대폰번호</td>\n");
      out.write("   	<td class=\"rear\"><select name=\"first\">\n");
      out.write("   		");

   		for(int i=0; i<3; i++){
   			if(num[0].equals(tels[i])){
      out.write("\n");
      out.write("   				<option selected=\"selected\">");
      out.print(tels[i]);
      out.write("</option>");
 
   			}else{
      out.write("\n");
      out.write("   				<option>");
      out.print(tels[i]);
      out.write("</option>");

   			}
   		}
   		
      out.write("\n");
      out.write("   	</select>\n");
      out.write("   	<input type=\"text\" name=\"second\" value=");
      out.print(num[1]);
      out.write(">\n");
      out.write("   	<input type=\"text\" name=\"third\" value=");
      out.print(num[2]);
      out.write("><br>\n");
      out.write("   	");
 
   		String y = "yes";
   		if(sms_al.equals(y)){
      out.write(" <!-- 사용자의 SMS 수신 여부에 따라 체크박스 디폴트값 변경 -->\n");
      out.write("   			<input type=\"checkbox\" name=\"sms_al\" value=\"yes\" id=\"input_yes1\" checked=\"checked\"/>SMS 광고 수신을 동의합니다.\n");
      out.write("   			<input type=\"hidden\" name=\"sms_al\" value=\"no\" id=\"input_no1\"/></td></tr>\n");
      out.write("   	  ");
}else{
      out.write("\n");
      out.write("   			<input type=\"checkbox\" name=\"sms_al\" value=\"yes\" id=\"input_yes1\"/>SMS 광고 수신을 동의합니다.\n");
      out.write("   	   		<input type=\"hidden\" name=\"sms_al\" value=\"no\" id=\"input_no1\"/></td></tr>\n");
      out.write("   	  ");
}
   	
      out.write("\n");
      out.write("   	<script>	/* SMS 수신 동의 체크 안할 시 no를 전달하기 위함 */\n");
      out.write("	if(document.getElementById(\"input_yes1\").checked){\n");
      out.write("		document.getElementById(\"input_no1\").disabled = true;\n");
      out.write("	}</script>\n");
      out.write("   	<tr><td class=\"front\">이메일</td>\n");
      out.write("   	<td class=\"rear\">");
      out.print(email );
      out.write("\n");
      out.write("   	");

   		if(email_al.equals(y)){
      out.write(" <!-- 사용자의 이메일 수신 여부에 따라 체크박스 디폴트값 변경 -->\n");
      out.write("   			<input type=\"checkbox\" name=\"email_al\" value=\"yes\" id=\"input_yes2\" checked=\"checked\"/>E-mail 광고 수신을 동의합니다.\n");
      out.write("   			<input type=\"hidden\" name=\"email_al\" value=\"no\" id=\"input_no2\"/></td></tr>\n");
      out.write("   	  ");
}else{
      out.write("\n");
      out.write("   			<input type=\"checkbox\" name=\"email_al\" value=\"yes\" id=\"input_yes2\"/>E-mail 광고 수신을 동의합니다.\n");
      out.write("   			<input type=\"hidden\" name=\"sms_al\" value=\"no\" id=\"input_no2\"/></td></tr>\n");
      out.write("   	  ");
}
   	
      out.write("\n");
      out.write("   	\n");
      out.write("   	<script>/* 이메일 수신 동의 체크 안할 시 no를 전달하기 위함 */\n");
      out.write("	if(document.getElementById(\"input_yes2\").checked){\n");
      out.write("			document.getElementById(\"input_no2\").disabled = true;\n");
      out.write("		}</script>\n");
      out.write("   	<tr><td class=\"front\">주소</td>\n");
      out.write("   	<td class=\"rear\">\n");
      out.write("   	우편번호<br><input type=\"text\" class=\"textbox\" name=\"addr_post\" value=");
      out.print(addr_post );
      out.write("><br>\n");
      out.write("   	지번 주소<br><input type=\"text\" class=\"textbox\" name=\"addr_lot\" value=");
      out.print(addr_lot );
      out.write("><br>\n");
      out.write("   	도로명 주소<br><input type=\"text\" class=\"textbox\" name=\"addr_road\" value=");
      out.print(addr_road );
      out.write("><br>\n");
      out.write("   	나머지 주소<br><input type=\"text\" class=\"textbox\" name=\"addr_rest\"value=");
      out.print(addr_rest );
      out.write("></td></tr>\n");
      out.write("   	<tr><td class=\"front\">가입일자</td>\n");
      out.write("    <td class=\"rear\">");
      out.print(reg_date );
      out.write("</td></tr>\n");
      out.write("</table>\n");
      out.write("    \n");
      out.write("   	<input type=\"submit\" value=\"수정하기\"/>\n");
      out.write("</form>\n");

} 

      out.write("\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
